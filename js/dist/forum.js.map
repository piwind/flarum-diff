{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@the-turk/flarum-diff/webpack/bootstrap","webpack://@the-turk/flarum-diff/webpack/runtime/compat get default export","webpack://@the-turk/flarum-diff/webpack/runtime/define property getters","webpack://@the-turk/flarum-diff/webpack/runtime/hasOwnProperty shorthand","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/extend']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/app']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/CommentPost']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Page']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/models/Post']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/Model']\"","webpack://@the-turk/flarum-diff/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@the-turk/flarum-diff/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/utils/mixin']\"","webpack://@the-turk/flarum-diff/./src/forum/models/Diff.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/Component']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Button']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@the-turk/flarum-diff/./src/forum/components/DiffButton.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@the-turk/flarum-diff/./src/forum/utils/redrawPost.js","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/Alert']\"","webpack://@the-turk/flarum-diff/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@the-turk/flarum-diff/./src/forum/components/DiffModal.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffList.js","webpack://@the-turk/flarum-diff/./src/forum/states/DiffListState.js","webpack://@the-turk/flarum-diff/./src/forum/components/DiffDropdown.js","webpack://@the-turk/flarum-diff/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/mixin'];","import Model from 'flarum/common/Model';\r\nimport mixin from 'flarum/common/utils/mixin';\r\n\r\nexport default class Diff extends mixin(Model, {\r\n  revision: Model.attribute('revision'),\r\n  createdAt: Model.attribute('createdAt', Model.transformDate),\r\n  deletedAt: Model.attribute('deletedAt', Model.transformDate),\r\n  rollbackedAt: Model.attribute('rollbackedAt', Model.transformDate),\r\n  actor: Model.hasOne('actor'),\r\n  deletedUser: Model.hasOne('deletedUser'),\r\n  rollbackedUser: Model.hasOne('rollbackedUser'),\r\n  inlineHtml: Model.attribute('inlineHtml'),\r\n  sideBySideHtml: Model.attribute('sideBySideHtml'),\r\n  combinedHtml: Model.attribute('combinedHtml'),\r\n  previewHtml: Model.attribute('previewHtml'),\r\n  comparisonBetween: Model.attribute('comparisonBetween'),\r\n}) {}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import Button from 'flarum/common/components/Button';\r\nimport avatar from 'flarum/common/helpers/avatar';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport username from 'flarum/common/helpers/username';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport extractText from 'flarum/common/utils/extractText';\r\n\r\n/**\r\n * The `DiffButton` component composes a button\r\n * for all revisions created in DiffList.\r\n */\r\nexport default class DiffButton extends Button {\r\n  // see the following link to find out why i'm overriding this at all\r\n  // https://discuss.flarum.org/d/22728-passing-an-object-to-a-custom-button-component\r\n  view() {\r\n    const attrs = Object.assign({}, this.attrs);\r\n\r\n    delete attrs.item;\r\n    delete attrs.subButton;\r\n    delete attrs.postDate;\r\n\r\n    attrs.type = 'button';\r\n\r\n    return <button {...attrs}>{this.getButtonContent()}</button>;\r\n  }\r\n\r\n  getButtonContent() {\r\n    const revision = this.attrs.item;\r\n    let actor = revision.actor();\r\n\r\n    let buttonText =\r\n      revision.revision() == 0\r\n        ? /* {username} created {ago} */\r\n          extractText(\r\n            app.translator.trans('the-turk-diff.forum.createdInfo', {\r\n              username: username(revision.actor()),\r\n              ago: humanTime(this.attrs.postDate),\r\n            })\r\n          )\r\n        : /* {username} edited {ago} */\r\n          extractText(\r\n            app.translator.trans('the-turk-diff.forum.editedInfo', {\r\n              username: username(revision.actor()),\r\n              ago: humanTime(revision.createdAt()),\r\n            })\r\n          );\r\n\r\n    if (revision.deletedAt()) {\r\n      if (this.attrs.subButton === false) {\r\n        /* {username} did something {ago} (deleted) */\r\n        buttonText = buttonText + ' ' + app.translator.trans('the-turk-diff.forum.deletedText');\r\n      } else {\r\n        /* sub button text that appears when you click on caret icon */\r\n        actor = revision.deletedUser();\r\n        /* {actor} deleted this content {ago} */\r\n        buttonText = extractText(\r\n          app.translator.trans('the-turk-diff.forum.deletedInfo', {\r\n            username: username(revision.deletedUser()),\r\n            ago: humanTime(revision.deletedAt()),\r\n          })\r\n        );\r\n      }\r\n    }\r\n\r\n    return [\r\n      // we also should consider deleted users here\r\n      actor.username() ? avatar(actor) : '',\r\n      // does this button have an icon?\r\n      revision.deletedAt() && this.attrs.subButton === false\r\n        ? icon('fas fa-caret-down', {\r\n            className: 'Button-caret',\r\n          })\r\n        : '',\r\n      // button label\r\n      <span className=\"Button-label\" title={buttonText}>\r\n        {revision.deletedAt() && this.attrs.subButton === true ? (\r\n          /* emphasize deleted revision's information */\r\n          <em>{buttonText}</em>\r\n        ) : (\r\n          buttonText\r\n        )}\r\n      </span>,\r\n    ];\r\n  }\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","/**\r\n * Redraw the post.\r\n * Workaround for - SubtreeRetainer doesn't allow redrawing post\r\n * https://discuss.flarum.org/d/22755-mithril-related-issues-on-poststream-items\r\n *\r\n * @param {Object} post\r\n */\r\nexport default function redrawPost(post) {\r\n  return post.save({}).then(() => m.redraw());\r\n}\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Alert'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import app from 'flarum/common/app';\r\nimport Modal from 'flarum/common/components/Modal';\r\nimport Button from 'flarum/common/components/Button';\r\nimport Tooltip from 'flarum/common/components/Tooltip';\r\nimport username from 'flarum/common/helpers/username';\r\nimport humanTime from 'flarum/common/helpers/humanTime';\r\nimport avatar from 'flarum/common/helpers/avatar';\r\nimport extractText from 'flarum/common/utils/extractText';\r\nimport redrawPost from '../utils/redrawPost';\r\nimport Alert from 'flarum/common/components/Alert';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Dropdown from 'flarum/common/components/Dropdown';\r\nimport DiffList from './DiffList';\r\n\r\n/**\r\n * The `DiffModal` component is the main component of this extension.\r\n * It also contains DiffList components.\r\n */\r\nexport default class DiffModal extends Modal {\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    /**\r\n     * Whether or not the modal is loading.\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    this.loading = false;\r\n\r\n    /**\r\n     * Whether the modal is showing or not.\r\n     *\r\n     * @type {Boolean}\r\n     */\r\n    this.showing = false;\r\n\r\n    /**\r\n     * We will use this to change modal's content when\r\n     * user clicks on a revision on the list.\r\n     *\r\n     * @type {Number|Null}\r\n     */\r\n    this.diffId = null;\r\n\r\n    /**\r\n     * This holds information about which revisions are subjects for comparison.\r\n     *\r\n     * @type {Object}\r\n     */\r\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\r\n  }\r\n\r\n  className() {\r\n    return 'DiffModal';\r\n  }\r\n\r\n  title() {\r\n    return [\r\n      // we also should consider deleted users here\r\n      this.attrs.listState.selectedItem.actor().username() ? avatar(this.attrs.listState.selectedItem.actor()) : '',\r\n      this.attrs.listState.selectedItem.revision() != 0\r\n        ? // x edited y ago\r\n          app.translator.trans('the-turk-diff.forum.editedInfo', {\r\n            username: (\r\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\r\n                {username(this.attrs.listState.selectedItem.actor())}\r\n              </a>\r\n            ),\r\n            ago: humanTime(this.attrs.listState.selectedItem.createdAt()),\r\n          })\r\n        : // x created y ago\r\n          app.translator.trans('the-turk-diff.forum.createdInfo', {\r\n            username: (\r\n              <a href={app.route.user(this.attrs.listState.selectedItem.actor())} config={m.route}>\r\n                {username(this.attrs.listState.selectedItem.actor())}\r\n              </a>\r\n            ),\r\n            ago: humanTime(this.attrs.listState.post.createdAt()),\r\n          }),\r\n    ];\r\n  }\r\n\r\n  oncreate(vnode) {\r\n    super.oncreate(vnode);\r\n\r\n    this.config(vnode);\r\n  }\r\n\r\n  onupdate(vnode) {\r\n    this.config(vnode);\r\n  }\r\n\r\n  config(vnode) {\r\n    // workaround for missing 'in' class on .ModalManager\r\n    // after redrawing the DiffList component.\r\n    // because i'm done with this shit.\r\n    // https://github.com/flarum/core/pull/2080\r\n    if (this.showing && !$('.ModalManager').hasClass('in')) $('.ModalManager').addClass('in');\r\n\r\n    // we should re-Initialize this component after user\r\n    // clicks a different revision while modal is open\r\n    if (this.diffId === this.attrs.listState.selectedItem.id()) return;\r\n\r\n    this.showing = true;\r\n    this.diffId = this.attrs.listState.selectedItem.id();\r\n\r\n    this.comparisonBetween = JSON.parse(this.attrs.listState.selectedItem.comparisonBetween());\r\n\r\n    if (this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision) {\r\n      // we'll use Side By Side renderer as a fallback\r\n      // if there is no renderer choice\r\n      return this.setDiffContent(app.session.user.preferences().diffRenderer ? app.session.user.preferences().diffRenderer : 'sideBySide');\r\n    } else {\r\n      return this.setDiffContent('preview');\r\n    }\r\n  }\r\n\r\n  view() {\r\n    return (\r\n      <div className={'Modal modal-dialog ' + this.className()}>\r\n        <div className=\"Modal-content\">\r\n          <div className=\"Modal-close App-backControl\">\r\n            {Button.component({\r\n              icon: 'fas fa-times',\r\n              onclick: this.hide.bind(this),\r\n              className: 'Button Button--icon Button--link',\r\n            })}\r\n          </div>\r\n          {\r\n            // Revision Options Button\r\n          }\r\n          {(this.attrs.listState.post.canDeleteEditHistory() &&\r\n            this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()) ||\r\n          (this.attrs.listState.post.canRollbackEditHistory() && this.$('.DeletedDiff').length != this.attrs.listState.post.revisionCount()) ? (\r\n            <Dropdown\r\n              className=\"diffCotrollerDropdown App-primaryControl\"\r\n              icon=\"fas fa-ellipsis-v\"\r\n              buttonClassName=\"Button\"\r\n              menuClassName=\"Dropdown-menu--right\"\r\n              label={app.translator.trans('the-turk-diff.forum.optionsButton')}\r\n            >\r\n              {\r\n                // Rollback\r\n                // there must be a revision to rollback,\r\n                // as we can't rollback to current post.\r\n              }\r\n              {this.attrs.listState.post.canRollbackEditHistory() && this.comparisonBetween.old.diffId\r\n                ? Button.component(\r\n                    {\r\n                      icon: 'fas fa-reply',\r\n                      onclick: () => {\r\n                        if (\r\n                          confirm(\r\n                            app.translator.trans('the-turk-diff.forum.confirmRollback', {\r\n                              number: this.attrs.listState.selectedItem.revision(),\r\n                            })\r\n                          )\r\n                        ) {\r\n                          this.loading = true;\r\n                          m.redraw();\r\n\r\n                          let rollbackTo =\r\n                            this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\r\n                              ? this.comparisonBetween.old.diffId\r\n                              : this.attrs.listState.selectedItem.id();\r\n\r\n                          app\r\n                            .request({\r\n                              url: `${app.forum.attribute('apiUrl')}/diff/${rollbackTo}`,\r\n                              method: 'POST',\r\n                            })\r\n                            .then(() => {\r\n                              redrawPost(this.attrs.listState.post);\r\n                              app.modal.close();\r\n\r\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\r\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\r\n                              }\r\n\r\n                              this.showAlert('success', 'rollback');\r\n                            })\r\n                            .catch(() => {\r\n                              this.loading = false;\r\n                              m.redraw();\r\n                              redrawPost(this.attrs.listState.post);\r\n\r\n                              this.showAlert('error', 'rollback');\r\n                            });\r\n                        }\r\n                      },\r\n                    },\r\n                    this.attrs.listState.selectedItem.revision() == 0\r\n                      ? /* we're viewing the original content */\r\n                        app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\r\n                      : this.attrs.listState.selectedItem.revision() == this.attrs.listState.post.revisionCount()\r\n                      ? this.comparisonBetween.old.revision != 0\r\n                        ? /* we're comparing this revision with current content. */\r\n                          app.translator.trans('the-turk-diff.forum.revertChangesButton')\r\n                        : /* we're comparing this revision with original content */\r\n                          app.translator.trans('the-turk-diff.forum.rollbackToOriginalButton')\r\n                      : /* we're comparing this revision with another revision */\r\n                        app.translator.trans('the-turk-diff.forum.rollbackButton', {\r\n                          number: this.attrs.listState.selectedItem.revision(),\r\n                        })\r\n                  )\r\n                : ''}\r\n\r\n              {\r\n                // Delete\r\n                // you can't delete last item on the list\r\n                // because it's the current post actually.\r\n              }\r\n              {this.attrs.listState.post.canDeleteEditHistory() &&\r\n              this.attrs.listState.selectedItem.revision() != this.attrs.listState.post.revisionCount()\r\n                ? Button.component(\r\n                    {\r\n                      icon: 'far fa-trash-alt',\r\n                      onclick: () => {\r\n                        if (confirm(app.translator.trans('the-turk-diff.forum.confirmDelete'))) {\r\n                          this.loading = true;\r\n                          m.redraw();\r\n\r\n                          this.attrs.listState.selectedItem\r\n                            .delete()\r\n                            .then(() => {\r\n                              app.modal.close();\r\n\r\n                              if (app.cache.diffs && app.cache.diffs[this.attrs.listState.post.id()]) {\r\n                                delete app.cache.diffs[this.attrs.listState.post.id()];\r\n                              }\r\n\r\n                              this.showAlert('success', 'delete');\r\n                            })\r\n                            .catch(() => {\r\n                              this.loading = false;\r\n                              m.redraw();\r\n\r\n                              this.showAlert('error', 'delete');\r\n                            });\r\n                        }\r\n                      },\r\n                    },\r\n                    app.translator.trans('the-turk-diff.forum.deleteButton')\r\n                  )\r\n                : ''}\r\n            </Dropdown>\r\n          ) : (\r\n            ''\r\n          )}\r\n\r\n          <div className=\"Modal-header\">\r\n            <h3 className=\"App-titleControl App-titleControl--text\">{this.title()}</h3>\r\n          </div>\r\n          {this.content()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  content() {\r\n    const revisionCount = this.attrs.listState.post.revisionCount();\r\n\r\n    /**\r\n     * `type` is passed to `setDiffContent` and the tooltip.\r\n     */\r\n    const diffSwitches = [\r\n      {\r\n        type: 'inline',\r\n        icon: 'fas fa-grip-lines',\r\n        class: 'inlineView',\r\n      },\r\n      {\r\n        type: 'sideBySide',\r\n        icon: 'fas fa-columns',\r\n        class: 'sideBySideView',\r\n      },\r\n      {\r\n        type: 'combined',\r\n        icon: 'far fa-square',\r\n        class: 'combinedView',\r\n      },\r\n    ];\r\n\r\n    return [\r\n      <div className=\"diff-grid\">\r\n        {/* Renderer Switcher Container */}\r\n        <div className=\"diff-grid-item diff-grid-controls\">\r\n          <div className=\"diffSwitcher\">\r\n            {this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\r\n              ? diffSwitches.map((switchData) => (\r\n                  <Tooltip showOnFocus={false} text={app.translator.trans(`the-turk-diff.forum.tooltips.${switchData.type}`)}>\r\n                    <div className=\"tooltip-wrapper\">\r\n                      <Button\r\n                        icon={switchData.icon}\r\n                        onclick={() => this.setDiffContent(switchData.type)}\r\n                        className={`Button Button--icon Button--link ${switchData.class}`}\r\n                      />\r\n                    </div>\r\n                  </Tooltip>\r\n                ))\r\n              : ''}\r\n            <Tooltip showOnFocus={false} text={app.translator.trans('the-turk-diff.forum.tooltips.preview')}>\r\n              <div className=\"tooltip-wrapper\">\r\n                <Button icon=\"far fa-eye\" onclick={() => this.setDiffContent('preview')} className=\"Button Button--icon Button--link diffPreview\" />\r\n              </div>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Comparison Info Container */}\r\n        <div className=\"diff-grid-item diff-grid-info\">\r\n          <div className=\"revisionInfo\">\r\n            <h4>{app.translator.trans('the-turk-diff.forum.revisions', { revisionCount })}</h4>\r\n            <p class=\"diffInfoContainer\" />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Revision List Container */}\r\n        <div className=\"diff-grid-item diff-grid-revisions\">\r\n          <DiffList state={this.attrs.listState}></DiffList>\r\n        </div>\r\n\r\n        {/* Diffs Container */}\r\n        <div className=\"diff-grid-item diff-grid-diff\">\r\n          <div className=\"diffContents\">\r\n            {\r\n              // .previewContainer is hidden by default\r\n              // we'll do some nasty switches later\r\n            }\r\n            <div\r\n              className={\r\n                'previewContainer Post-body' + (app.forum.attribute('textFormattingForDiffPreviews') === false ? ' diff-skip-formatting' : '')\r\n              }\r\n            >\r\n              {this.renderHtml(this.attrs.listState.selectedItem.data.attributes.previewHtml)}\r\n            </div>\r\n            <div className=\"diffContainer\" />\r\n          </div>\r\n        </div>\r\n        {this.loading ? <LoadingIndicator containerClassName=\"DiffModal-loading\" size=\"large\" /> : ''}\r\n      </div>,\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Slowly scroll to selected revision.\r\n   */\r\n  onready() {\r\n    const $revisions = this.$('.DiffList-content');\r\n    let $selectedItem = this.$('li#parentDiff' + this.attrs.listState.selectedItem.id());\r\n\r\n    $revisions.animate({\r\n      scrollTop: $selectedItem.offset().top - $revisions.offset().top + $revisions.scrollTop(),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show success and error messages for rollback and delete operations.\r\n   *\r\n   * @param {string} type\r\n   * @param {string} key\r\n   */\r\n  showAlert(type, key) {\r\n    const message = {\r\n      success: 'the-turk-diff.forum.' + key + 'SuccessMessage',\r\n      error: 'the-turk-diff.forum.' + key + 'ErrorMessage',\r\n    }[type];\r\n\r\n    app.alerts.show(Alert, { type }, app.translator.trans(message));\r\n  }\r\n\r\n  /**\r\n   * Render the diff views provided by external lib.\r\n   *\r\n   * do we need to worry about m.trust() function?\r\n   * well, Flarum itself doing the same way for rendering\r\n   * post items as seen on CommentPost.js#L52\r\n   * also, the diff library itself treat all inputs as plain text:\r\n   * https://github.com/jfcherng/php-diff/issues/9#issuecomment-526808774\r\n   * so no need to use additional Sanitizer lib for this operation.\r\n   *\r\n   * @param {string} content\r\n   */\r\n  renderHtml(content) {\r\n    return m.trust(content);\r\n  }\r\n\r\n  /**\r\n   * Insert rendered diff views into their container\r\n   * and disable active views' buttons.\r\n   * Disabling buttons is just for indicating\r\n   * so frontend looks good but the backend sucks.\r\n   *\r\n   * @param {string} contentType\r\n   */\r\n  setDiffContent(contentType) {\r\n    let diffContentHtml;\r\n    const $diffContainer = this.$('.diffContainer');\r\n    const $previewContainer = this.$('.previewContainer');\r\n\r\n    // buttons\r\n    const $sideBySideButton = this.$('.Button.sideBySideView');\r\n    const $inlineButton = this.$('.Button.inlineView');\r\n    const $combinedButton = this.$('.Button.combinedView');\r\n    const $previewButton = this.$('.Button.diffPreview');\r\n\r\n    if (contentType !== 'preview') {\r\n      if (contentType === 'sideBySide') {\r\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.sideBySideHtml);\r\n        $sideBySideButton.prop('disabled', true);\r\n        // what a dynasty - LOL\r\n        $sideBySideButton.parent().siblings().children().prop('disabled', false);\r\n      } else if (contentType === 'inline') {\r\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.inlineHtml);\r\n        $inlineButton.prop('disabled', true);\r\n        $inlineButton.parent().siblings().children().prop('disabled', false);\r\n      } else if (contentType === 'combined') {\r\n        diffContentHtml = this.renderHtml(this.attrs.listState.selectedItem.data.attributes.combinedHtml);\r\n        $combinedButton.prop('disabled', true);\r\n        $combinedButton.parent().siblings().children().prop('disabled', false);\r\n      }\r\n    } else {\r\n      $diffContainer.hide();\r\n      this.$('.previewContainer').show();\r\n\r\n      $previewButton.prop('disabled', true);\r\n      $previewButton.parent().siblings().children().prop('disabled', false);\r\n      return this.setInfoContent(true);\r\n    }\r\n\r\n    if (diffContentHtml) {\r\n      $diffContainer.html(diffContentHtml.children);\r\n\r\n      if ($previewContainer.is(':visible')) {\r\n        $diffContainer.show();\r\n        $previewContainer.hide();\r\n      }\r\n\r\n      // let's remember their renderer choice\r\n      app.session.user.savePreferences({\r\n        diffRenderer: contentType,\r\n      });\r\n\r\n      return this.setInfoContent();\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  /**\r\n   * Set informations about comparisons.\r\n   *\r\n   * @param {Boolean} preview\r\n   */\r\n  setInfoContent(preview = false) {\r\n    const $infoContainer = this.$('.diffInfoContainer');\r\n\r\n    let infoContentHtml =\r\n      !preview && this.attrs.listState.selectedItem.revision() != 0 && this.comparisonBetween.new.revision != this.comparisonBetween.old.revision\r\n        ? extractText(\r\n            app.translator.trans('the-turk-diff.forum.differences.sentence', {\r\n              old:\r\n                this.comparisonBetween.old.revision == -1\r\n                  ? /* we're viewing differences between current content and {new} */\r\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\r\n                  : this.comparisonBetween.old.revision == 0\r\n                  ? /* we're viewing differences between original content and {new} */\r\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\r\n                  : /* we're viewing differences between revision X and {new} */\r\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\r\n                      number: this.comparisonBetween.old.revision,\r\n                    }),\r\n              new:\r\n                this.comparisonBetween.new.revision == 0\r\n                  ? /* we're viewing differences between {old} and original content */\r\n                    app.translator.trans('the-turk-diff.forum.differences.originalContent')\r\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\r\n                  ? /* we're viewing differences between {old} and current content */\r\n                    app.translator.trans('the-turk-diff.forum.differences.currentContent')\r\n                  : /* we're viewing differences between {old} and revision X */\r\n                    app.translator.trans('the-turk-diff.forum.differences.revisionWithNumber', {\r\n                      number: this.comparisonBetween.new.revision,\r\n                    }),\r\n            })\r\n          )\r\n        : extractText(\r\n            app.translator.trans('the-turk-diff.forum.previewMode.sentence', {\r\n              content:\r\n                this.comparisonBetween.new.revision == 0\r\n                  ? /* we're previewing original content */\r\n                    app.translator.trans('the-turk-diff.forum.previewMode.originalContent')\r\n                  : this.comparisonBetween.new.revision == this.attrs.listState.post.revisionCount()\r\n                  ? /* we're previewing current content */\r\n                    app.translator.trans('the-turk-diff.forum.previewMode.currentContent')\r\n                  : /* we're previewing revision X */\r\n                    app.translator.trans('the-turk-diff.forum.previewMode.revisionWithNumber', {\r\n                      number: this.comparisonBetween.new.revision,\r\n                    }),\r\n            })\r\n          );\r\n\r\n    return $infoContainer.html(infoContentHtml);\r\n  }\r\n}\r\n","import app from 'flarum/common/app';\r\nimport Component from 'flarum/common/Component';\r\nimport DiffButton from './DiffButton';\r\nimport DiffModal from './DiffModal';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Tooltip from 'flarum/common/components/Tooltip';\r\n\r\n/**\r\n * The `DiffList` component displays a list of the post's revisions.\r\n * It's been using on both DiffDropdown & DiffModal components.\r\n * It also contains DiffButton components.\r\n */\r\nexport default class DiffList extends Component {\r\n  view() {\r\n    const state = this.attrs.state;\r\n    const pages = app.cache.diffs[state.post.id()] || [];\r\n\r\n    return (\r\n      <div className=\"DiffList-container\">\r\n        <div className=\"DiffList-content\">\r\n          <ul>\r\n            {pages.length\r\n              ? pages.map((diffs) => {\r\n                  return diffs.map((item) => {\r\n                    const tooltipClass = 'diffListTooltip';\r\n\r\n                    let diffButton = (\r\n                      <Tooltip\r\n                        showOnFocus={false}\r\n                        position=\"left\"\r\n                        text={\r\n                          item.revision() == state.post.revisionCount()\r\n                            ? // we're hovering on latest revision's button\r\n                              app.translator.trans('the-turk-diff.forum.tooltips.mostRecent')\r\n                            : item.revision() == 0\r\n                            ? // we're hovering on zeroth revision's button\r\n                              app.translator.trans('the-turk-diff.forum.tooltips.originalContent')\r\n                            : // we're hovering on other revision's button\r\n                              app.translator.trans('the-turk-diff.forum.tooltips.revisionWithNumber', {\r\n                                number: item.revision(),\r\n                              })\r\n                        }\r\n                      >\r\n                        {DiffButton.component({\r\n                          'data-container': 'body',\r\n                          postDate: state.post.createdAt(),\r\n                          subButton: false,\r\n                          item,\r\n                          onclick: () => {\r\n                            if (!item.deletedAt()) {\r\n                              // fix tooltips are not disappearing onclick\r\n                              $('.' + tooltipClass).remove();\r\n\r\n                              state.selectedItem = item;\r\n                              app.modal.show(DiffModal, { listState: state });\r\n\r\n                              if (state.forModal) {\r\n                                // .DiffList-content container of clicked revision\r\n                                const $listContainer = this.$('li#parentDiff' + item.id());\r\n\r\n                                // disable clicked revision, enable others\r\n                                $listContainer.find('button').prop('disabled', true);\r\n                                $listContainer.siblings().find('button').prop('disabled', false);\r\n                                // add 'active' class to clicked revision, remove it from others\r\n                                $listContainer.siblings().removeClass('active');\r\n                                $listContainer.addClass('active');\r\n                              }\r\n                            } else {\r\n                              // if revision is deleted, we'll toggle the info\r\n                              // like GitHub does.\r\n                              this.toggleSubDiff(item.id());\r\n                            }\r\n                          },\r\n                          oncreate: (vnode) => {\r\n                            $(vnode.dom)\r\n                              // this is a workaround for adding custom\r\n                              // classes into bootstrap tooltips\r\n                              // https://stackoverflow.com/a/29879041/12866913\r\n                              .data('bs.tooltip')\r\n                              .tip()\r\n                              .addClass(item.deletedAt() ? tooltipClass + ' deletedDiffTooltip' : tooltipClass);\r\n                          },\r\n                        })}\r\n                      </Tooltip>\r\n                    );\r\n\r\n                    // returns the template for revision list items\r\n                    return [\r\n                      <li className={'Diff ParentDiff' + (item.deletedAt() ? ' DeletedDiff' : '')} id={'parentDiff' + item.id()}>\r\n                        {diffButton}\r\n                      </li>,\r\n                      item.deletedAt() ? (\r\n                        <li className=\"Diff SubDiff\" id={'subDiff' + item.id()}>\r\n                          <DiffButton postDate={state.post.createdAt()} subButton item={item} />\r\n                        </li>\r\n                      ) : (\r\n                        ''\r\n                      ),\r\n                    ];\r\n                  });\r\n                })\r\n              : ''}\r\n            {state.loading ? (\r\n              LoadingIndicator.component({\r\n                className: 'LoadingIndicator--block',\r\n              })\r\n            ) : !pages.length ? (\r\n              <div className=\"DiffList-empty\">{app.translator.trans('the-turk-diff.forum.emptyText')}</div>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  oncreate(vnode) {\r\n    super.oncreate(vnode);\r\n    const state = this.attrs.state;\r\n\r\n    if (state.forModal && state.selectedItem) {\r\n      let $selectedItem = this.$('li#parentDiff' + state.selectedItem);\r\n      $selectedItem.find('button').prop('disabled', true);\r\n      $selectedItem.addClass('active');\r\n    }\r\n\r\n    const $revisions = this.$('.DiffList-content');\r\n    this.$scrollParent = $revisions.css('overflow') === 'auto' ? $revisions : $(window);\r\n\r\n    // Lazy-loading implementation for the revision list\r\n    // simply checks if we're bottom of the list\r\n    // and if there are more results to show\r\n    this.scrollHandler = () => {\r\n      const scrollTop = this.$scrollParent.scrollTop();\r\n      const viewportHeight = this.$scrollParent.height();\r\n      const contentTop = this.$scrollParent === $revisions ? 0 : $revisions.offset().top;\r\n      const contentHeight = $revisions[0].scrollHeight;\r\n\r\n      if (state.moreResults && !state.loading && scrollTop + viewportHeight >= contentTop + contentHeight) {\r\n        state.loadMore();\r\n      }\r\n    };\r\n\r\n    this.$scrollParent.on('scroll', this.scrollHandler);\r\n  }\r\n\r\n  onremove() {\r\n    this.$scrollParent.off('scroll', this.scrollHandler);\r\n  }\r\n\r\n  /**\r\n   * Toggle the deleted revision's information (sub-button).\r\n   *\r\n   * @param {Number} id\r\n   */\r\n  toggleSubDiff(id) {\r\n    const $subDiff = this.$('li.Diff#subDiff' + id);\r\n    const $parentDiff = this.$('li.Diff#parentDiff' + id);\r\n    const $icon = $parentDiff.find('.icon');\r\n\r\n    $subDiff.toggle();\r\n\r\n    // switch caret icon onClick\r\n    if ($icon.hasClass('fa-caret-down')) {\r\n      $icon.removeClass('fa-caret-down').addClass('fa-caret-up');\r\n    } else {\r\n      $icon.removeClass('fa-caret-up').addClass('fa-caret-down');\r\n    }\r\n  }\r\n}\r\n","import redrawPost from '../utils/redrawPost';\r\n\r\nexport default class DiffListState {\r\n  constructor(post, forModal, moreResults, selectedItem) {\r\n    this.post = post;\r\n    this.forModal = forModal;\r\n    this.moreResults = moreResults || false;\r\n    this.selectedItem = selectedItem;\r\n    this.loading = false;\r\n\r\n    if (!app.cache.diffs) {\r\n      app.cache.diffs = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load revisions.\r\n   *\r\n   * @public\r\n   */\r\n  load() {\r\n    // don't do anthing if we already cached revisions for the post.\r\n    // lazy-loading will perform loadMore() if there are moreResults\r\n    if (app.cache.diffs[this.post.id()]) return this.redrawList();\r\n\r\n    this.loadMore();\r\n  }\r\n\r\n  /**\r\n   * Load the next page of revision results.\r\n   *\r\n   * @public\r\n   */\r\n  loadMore() {\r\n    this.loading = true;\r\n    this.redrawList();\r\n\r\n    // don't do anthing if we already cached ALL revisions for the post.\r\n    if (app.cache.diffs[this.post.id()] && app.cache.diffs[this.post.id()].length == this.post.revisionCount()) {\r\n      return;\r\n    }\r\n\r\n    // set URL parameters\r\n    const params = app.cache.diffs[this.post.id()]\r\n      ? {\r\n          id: this.post.id(),\r\n          page: {\r\n            offset: app.cache.diffs[this.post.id()].length * 10,\r\n          },\r\n        }\r\n      : {\r\n          id: this.post.id(),\r\n        };\r\n\r\n    return app.store\r\n      .find('diff', params)\r\n      .then(this.parseResults.bind(this))\r\n      .catch(() => {})\r\n      .then(() => {\r\n        this.loading = false;\r\n        this.redrawList();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Parse results and append them to the revision list.\r\n   *\r\n   * @param {Diff[]} results\r\n   * @return {Diff[]}\r\n   */\r\n  parseResults(results) {\r\n    app.cache.diffs[this.post.id()] = app.cache.diffs[this.post.id()] || [];\r\n\r\n    if (results.length) app.cache.diffs[this.post.id()].push(results);\r\n\r\n    this.moreResults = !!results.payload.links.next;\r\n\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * Redraw the list based on parent component.\r\n   */\r\n  redrawList() {\r\n    m.redraw();\r\n\r\n    // because we don't need to redraw the post\r\n    // to update DiffList in DiffModal.\r\n    // We just need it for updating DiffDropdown.\r\n    if (this.forModal) return;\r\n\r\n    return redrawPost(this.post);\r\n  }\r\n}\r\n","import Dropdown from 'flarum/common/components/Dropdown';\r\nimport DiffList from './DiffList';\r\nimport icon from 'flarum/common/helpers/icon';\r\nimport DiffListState from '../states/DiffListState';\r\n\r\n/**\r\n * The `DiffDropdown` component is the entrance point for this extension.\r\n * It's the component that you see when you click on \"Edited\" button.\r\n * It also contains DiffList components.\r\n */\r\nexport default class DiffDropdown extends Dropdown {\r\n  static initAttrs(attrs) {\r\n    attrs.className = 'DiffDropdown';\r\n    attrs.buttonClassName = 'Button Button--link';\r\n    attrs.menuClassName = attrs.menuClassName;\r\n    attrs.label = app.translator.trans('the-turk-diff.forum.editedText');\r\n    attrs.icon = 'fas fa-history';\r\n\r\n    super.initAttrs(attrs);\r\n  }\r\n\r\n  oninit(vnode) {\r\n    super.oninit(vnode);\r\n\r\n    /**\r\n     * The post that we're working with.\r\n     *\r\n     * @type {Post[]}\r\n     */\r\n    this.post = this.attrs.post;\r\n\r\n    /**\r\n     * Create a new revision list.\r\n     *\r\n     * @type {DiffListState}\r\n     */\r\n    this.listState = new DiffListState(this.post, false, null);\r\n  }\r\n\r\n  getButton() {\r\n    const vdom = super.getButton();\r\n\r\n    vdom.attrs.title = this.attrs.label;\r\n    vdom.attrs.onclick = this.onclick.bind(this);\r\n\r\n    return vdom;\r\n  }\r\n\r\n  getButtonContent() {\r\n    return [\r\n      icon(this.attrs.icon, {\r\n        className: 'Button-icon',\r\n      }),\r\n      <span className=\"Button-label\">{this.attrs.label}</span>,\r\n    ];\r\n  }\r\n\r\n  getMenu() {\r\n    const revisionCount = this.attrs.post.revisionCount();\r\n\r\n    return (\r\n      <div className={'Dropdown-menu ' + this.attrs.menuClassName}>\r\n        <div className=\"DiffList-header\">\r\n          <h4>\r\n            {/* edited 1 time | edited x times */}\r\n            {app.translator.trans('the-turk-diff.forum.revisionInfo', { revisionCount })}\r\n          </h4>\r\n        </div>\r\n        {this.showing ? <DiffList state={this.listState}></DiffList> : ''}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load revision list.\r\n   */\r\n  onclick() {\r\n    this.listState.load();\r\n  }\r\n}\r\n","import { extend } from 'flarum/common/extend';\r\n\r\nimport app from 'flarum/common/app';\r\nimport CommentPost from 'flarum/common/components/CommentPost';\r\nimport Page from 'flarum/common/components/Page';\r\nimport Post from 'flarum/common/models/Post';\r\nimport Model from 'flarum/common/Model';\r\n\r\nimport Diff from './models/Diff';\r\nimport DiffDropdown from './components/DiffDropdown';\r\n\r\napp.initializers.add('the-turk-diff', () => {\r\n  app.store.models.diff = Diff;\r\n  Post.prototype.revisionCount = Model.attribute('revisionCount');\r\n  Post.prototype.canViewEditHistory = Model.attribute('canViewEditHistory');\r\n  Post.prototype.canRollbackEditHistory = Model.attribute('canRollbackEditHistory');\r\n  Post.prototype.canDeleteEditHistory = Model.attribute('canDeleteEditHistory');\r\n\r\n  extend(CommentPost.prototype, 'headerItems', function (items) {\r\n    const post = this.attrs.post;\r\n\r\n    // replace \"edited\" text to \"edited\" button\r\n    if (post.isEdited() && !post.isHidden() && post.canViewEditHistory() && post.revisionCount() > 0) {\r\n      items.replace('edited', DiffDropdown.component({ post }));\r\n    }\r\n\r\n    // remove diffs cache when post is editing\r\n    if (this.isEditing() && app.cache.diffs && app.cache.diffs[this.attrs.post.id()]) {\r\n      delete app.cache.diffs[this.attrs.post.id()];\r\n    }\r\n  });\r\n\r\n  // prevent dropdown from closing when user clicks on deleted diff\r\n  extend(Page.prototype, 'oninit', function () {\r\n    $('body').on('click', 'li.ParentDiff.DeletedDiff, li.SubDiff', function (e) {\r\n      e.stopPropagation();\r\n    });\r\n  });\r\n});\r\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","Diff","_mixin","apply","arguments","mixin","Model","revision","createdAt","deletedAt","rollbackedAt","actor","deletedUser","rollbackedUser","inlineHtml","sideBySideHtml","combinedHtml","previewHtml","comparisonBetween","DiffButton","_Button","_proto","view","attrs","assign","this","item","subButton","postDate","type","m","getButtonContent","buttonText","extractText","app","translator","trans","username","ago","humanTime","avatar","icon","className","title","Button","redrawPost","post","save","then","redraw","DiffModal","_Modal","oninit","vnode","loading","showing","diffId","JSON","parse","listState","selectedItem","href","user","config","route","oncreate","onupdate","$","hasClass","addClass","id","old","setDiffContent","preferences","diffRenderer","_this","onclick","hide","canDeleteEditHistory","revisionCount","canRollbackEditHistory","length","Dropdown","buttonClassName","menuClassName","label","confirm","number","rollbackTo","url","attribute","method","close","diffs","showAlert","content","_this2","class","map","switchData","Tooltip","showOnFocus","text","DiffList","state","renderHtml","data","attributes","LoadingIndicator","containerClassName","size","onready","$revisions","$selectedItem","animate","scrollTop","offset","top","message","success","error","show","Alert","trust","contentType","diffContentHtml","$diffContainer","$previewContainer","$sideBySideButton","$inlineButton","$combinedButton","$previewButton","parent","siblings","children","setInfoContent","html","is","savePreferences","preview","$infoContainer","infoContentHtml","new","Modal","_Component","pages","tooltipClass","diffButton","position","component","toggleSubDiff","remove","forModal","$listContainer","find","removeClass","dom","tip","$scrollParent","css","window","scrollHandler","viewportHeight","height","contentTop","contentHeight","scrollHeight","moreResults","loadMore","on","onremove","off","$subDiff","$icon","toggle","Component","DiffListState","cache","load","redrawList","params","page","store","parseResults","results","push","payload","links","next","DiffDropdown","_Dropdown","initAttrs","getButton","vdom","getMenu","add","models","diff","Post","canViewEditHistory","extend","CommentPost","items","isEdited","isHidden","replace","isEditing","Page","stopPropagation"],"sourceRoot":""}